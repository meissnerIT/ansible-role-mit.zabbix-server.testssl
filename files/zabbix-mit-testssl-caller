#!/usr/bin/env python
#
# Distributed via ansible - mit.zabbix-server.testssl
#
# #17257: Finds all hosts using mit-testssl-* (like mit-testssl-http or 
# mit-testssl-smtp) via Zabbix API and runs zabbix-mit-testssl <host> <protocol>
#
# Idempotent - can be called as often as you wish.
#
# zabbix-mit-testssl-caller -> zabbix-mit-testssl -> zabbix-mit-testssl-helper
#
# v2021-10-05-1: Calls now zabbix-mit-testssl

import ConfigParser
import os
import subprocess
import sys
import logging
# https://github.com/lukecyca/pyzabbix
from pyzabbix import ZabbixAPI

formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
shStdout = logging.StreamHandler(sys.stdout)
shStdout.setFormatter(formatter)
shStderr = logging.StreamHandler(sys.stderr)
shStderr.setFormatter(formatter)
shStderr.setLevel(logging.ERROR)

log = logging.getLogger(os.path.basename(__file__))
log.addHandler(shStdout)
log.addHandler(shStderr)
log.setLevel(logging.INFO)

#logpz = logging.getLogger('pyzabbix')
#logpz.addHandler(shStdout)
#logpz.setLevel(logging.DEBUG)

configParser = ConfigParser.RawConfigParser()   
configFilePath = r'/etc/zabbix/zabbix_agentd-mit-testssl.sh.conf'
configParser.read(configFilePath)
zabbix_api_user = configParser.get('DEFAULT', 'zabbix-api.user')
zabbix_api_password = configParser.get('DEFAULT', 'zabbix-api.password')
zabbix_api_url = configParser.get('DEFAULT', 'zabbix-api.url')
zabbix_host = configParser.get('DEFAULT', 'zabbix.host')

log.info("Starting")

# https://stackoverflow.com/questions/419163/what-does-if-name-main-do
zapi = ZabbixAPI(zabbix_api_url)
if configParser.has_option('DEFAULT', 'zabbix-api.verify'):
    # https://requests.readthedocs.io/en/master/user/advanced/#ssl-cert-verification
    zapi.session.verify = configParser.get('DEFAULT', 'zabbix-api.verify')
zapi.login(zabbix_api_user, zabbix_api_password)
log.debug("Connected to Zabbix API Version %s" % zapi.api_version())

#template = zapi.template.get(search={ "host": "Template App TLS Service*testssl" })
#template = zapi.template.get(search={ "host": "Template App TLS Service testssl" }, output=["templateid"])
#templateid=template[0]['templateid']
#print('Got templateid %s' % templateid)

# sort in order to get the same order within every call, makes debugging easier
for item in zapi.item.get(search={ "key_": "mit-testssl" }, sortfield="itemid", monitored="true"):
    hostid=item["hostid"]
    hosts = zapi.host.get(hostids=item["hostid"])
    if hosts:
        host = hosts[0]['host']
        #log.debug("Got %s (id=%s) with %s:%s"% (hosts[0]['host'], hostid, hostconn, httpsport))
        if item["key_"] == "mit-testssl-http":
            protocol = "http"
        elif item["key_"] == "mit-testssl-imap":
            protocol = "imap"
        elif item["key_"] == "mit-testssl-smtp":
            protocol = "smtp"
        else:
            log.error("Item with key=%s not supported" % item["key_"])
        if protocol:
            testsslCmd = ["/usr/local/bin/zabbix-mit-testssl", protocol, host]
            #testsslCmd = ["echo"]
            log.debug("Executing %s for %s (id=%s)" % (testsslCmd, host, hostid))
            testsslOutput = subprocess.check_output(testsslCmd).strip()
            log.info("Output from %s: \n%s" % (testsslCmd, testsslOutput))

log.info("READY.")

