---
- name: Set Debian defaults
  ansible.builtin.set_fact:
    mit_testssl_etc_dir: /etc/opt/mit-testssl.sh
  when: ansible_os_family == "Debian"

- name: Set FreeBSD default
  ansible.builtin.set_fact:
    is_jail: "{{ 'jails' in ansible_virtualization_tech_guest }}"
    mit_testssl_etc_dir: /usr/local/etc/mit-testssl.sh
  when: ansible_os_family == "FreeBSD"

# https://github.com/drwetter/testssl.sh/issues/258
- name: Ensure fdescfs is available
  ansible.posix.mount:
    path: /dev/fd
    src: none
    fstype: fdescfs
    state: mounted
  when: ansible_os_family == "FreeBSD" and not is_jail
- name: Ensure fdescfs is available in jail (mount.fdescfs)
  ansible.builtin.command: test -d /dev/fd
  when: ansible_os_family == "FreeBSD" and is_jail
  changed_when: false

- name: Install bash
  package:
    name: bash

- name: Copy requirements.txt
  ansible.builtin.copy:
    src: requirements.txt
    dest: /opt/mit-testssl.sh/

- name: Install python3-venv
  ansible.builtin.apt:
    pkg: python3-venv
  when: ansible_os_family == "Debian"

# Either 39 or 311
- name: Get python packaging prefix
  ansible.builtin.shell: pkg info|egrep -o "^python[0-9]{2,3}-"|egrep -o "[0-9]+"
  register: python_packaging_prefix
  changed_when: false
  when: ansible_os_family == "FreeBSD"

- name: Install python packaging {{ python_packaging_prefix.stdout }}
  ansible.builtin.package:
    name: py{{ python_packaging_prefix.stdout }}-packaging
  when: ansible_os_family == "FreeBSD"

- name: Install pip in venv
  ansible.builtin.pip:
    name: pip
    virtualenv: /opt/mit-testssl.sh/.venv
    virtualenv_command: python3 -m venv

- name: Updated python dependencies (requirements.txt)
  ansible.builtin.pip:
    virtualenv_command: python3 -m venv
    requirements: /opt/mit-testssl.sh/requirements.txt
    virtualenv: /opt/mit-testssl.sh/.venv
  environment: "{{ proxy_env }}"

- name: Rsync testssl.sh (directory, distribution)
  synchronize:
    src: testssl.sh/
    dest: /opt/mit-testssl.sh/testssl.sh/
    delete: true
    rsync_opts:
      - --exclude=.git

- name: Copy mit-testssl.sh*
  ansible.builtin.template:
    src: "{{ item }}"
    dest: /opt/mit-testssl.sh/bin/
    mode: "0755"
  loop:
    - mit-check-cert.py
    - mit-check-cert.sh
    - mit-testssl.sh
    - mit-testssl.sh-caller
    - mit-testssl.sh-helper

- name: Add MAILTO={{ mit_testssl_sh_cron_mailto }} to crontab of user zabbix
  ansible.builtin.cron:
    user: zabbix
    name: MAILTO
    env: true
    job: "{{ mit_testssl_sh_cron_mailto }}"

- name: Add cronjob for mit-testssl.sh-caller
  ansible.builtin.cron:
    user: zabbix
    name: Call mit-testssl.sh
    minute: 10
    hour: 0
    job: /opt/mit-testssl.sh/bin/mit-testssl.sh-caller > /var/log/zabbix/mit-testssl.sh-caller.log

- name: Remove deprecated files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/cron.d/local-zabbix-mit-testssl-caller
    - /etc/cron.d/local-zabbix-mit-testssl-sh-caller
    - /etc/cron.d/local-zabbix-mit-testssl.sh-caller
    - /usr/lib/zabbix/externalscripts/mit-check-cert.py
    - /usr/lib/zabbix/externalscripts/mit-check-cert.sh
    - /usr/local/bin/zabbix-mit-testssl
    - /usr/local/bin/zabbix-mit-testssl-caller
    - /usr/local/bin/zabbix-mit-testssl-helper
    #TODO - /usr/local/share/testssl.sh
    - /var/log/zabbix/zabbix-mit-testssl-caller.log
